----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date: 05/04/2021 01:01:50 PM
-- Design Name: 
-- Module Name: 41mux - Behavioral
-- Project Name: 
-- Target Devices: 
-- Tool Versions: 
-- Description: 
-- 
-- Dependencies: 
-- 
-- Revision:
-- Revision 0.01 - File Created
-- Additional Comments:
-- 
----------------------------------------------------------------------------------


library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx leaf cells in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity 41mux is
    Port ( A,B,C,D  :   in STD_LOGIC_VECTOR(3 downto 0);
        sel : in STD_LOGIC_VECTOR(1 downto 0);
        an : out STD_LOGIC_VECTOR(3 downto 0);
        segments : out STD_LOGIC_VECTOR(6 downto 0));
end 41mux;

architecture Behavioral of 41mux is
signal bcd  : std_logic_vector(3 downto 0);



begin
    with sel select
        bcd<=A when "00",
        B when "01",
        C when "10",
        D when "11",
        "Z" when others;
     manual 
     an<="1110";
     segments<= "1000000" when bcd="0000" else --0                   
                 "1111001" when bcd="0001" else --1               
                 "0100100" when bcd="0010" else --2               
                 "0110000" when bcd="0011" else --3               
                 "0011001" when bcd="0100" else --4               
                 "0010010" when bcd="0101" else --5               
                 "0000010" when bcd="0110" else --6               
                 "1111000" when bcd="0111" else --7               
                 "0000000" when bcd="1000" else --8               
                 "0011000" when bcd="1001" else --9               
                 "0001000" when bcd="1010" else --a              
                 "0000011" when bcd="1011" else --b               
                 "1000110" when bcd="1100" else --c              
                 "0100001" when bcd="1101" else --d               
                 "0000110" when bcd="1110" else --e              
                 "0001110" when bcd="1111" else --f              
                 "1111111";   

end Behavioral;